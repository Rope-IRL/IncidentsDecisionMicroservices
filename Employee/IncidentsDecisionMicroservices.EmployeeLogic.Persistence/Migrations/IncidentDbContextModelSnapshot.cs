// <auto-generated />
using IncidentsDecisionMicroservices.EmployeeLogic.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IncidentsDecisionMicroservices.EmployeeLogic.Persistence.Migrations
{
    [DbContext(typeof(IncidentDbContext))]
    partial class IncidentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HealthGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("HealthGroups");
                });

            modelBuilder.Entity("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.Employee.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.EmployeeHealthGroup.EmployeeHealthGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("HealthGroupId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("HealthGroupId")
                        .IsUnique();

                    b.ToTable("EmployeeHealthGroups");
                });

            modelBuilder.Entity("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.EmployeePosition.EmployeePosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("PositionId")
                        .IsUnique();

                    b.ToTable("EmployeePositions");
                });

            modelBuilder.Entity("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.Position.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.EmployeeHealthGroup.EmployeeHealthGroup", b =>
                {
                    b.HasOne("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.Employee.Employee", null)
                        .WithOne()
                        .HasForeignKey("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.EmployeeHealthGroup.EmployeeHealthGroup", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthGroup", null)
                        .WithOne()
                        .HasForeignKey("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.EmployeeHealthGroup.EmployeeHealthGroup", "HealthGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.EmployeePosition.EmployeePosition", b =>
                {
                    b.HasOne("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.Employee.Employee", null)
                        .WithOne()
                        .HasForeignKey("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.EmployeePosition.EmployeePosition", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.Position.Position", null)
                        .WithOne()
                        .HasForeignKey("IncidentsDecisionMicroservices.EmployeeLogic.Core.Models.EmployeePosition.EmployeePosition", "PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
